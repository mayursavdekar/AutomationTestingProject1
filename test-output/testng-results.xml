<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="4" passed="1">
  <reporter-output>
    <line>
      <![CDATA[Your test is started :- MayurTest]]>
    </line>
    <line>
      <![CDATA[Your test is started :- login]]>
    </line>
    <line>
      <![CDATA[Your test is failed :- login]]>
    </line>
    <line>
      <![CDATA[Your test is started :- login]]>
    </line>
    <line>
      <![CDATA[Your test is success :- login]]>
    </line>
    <line>
      <![CDATA[Your test is started :- login]]>
    </line>
    <line>
      <![CDATA[Your test is failed :- login]]>
    </line>
    <line>
      <![CDATA[Your test is started :- login]]>
    </line>
    <line>
      <![CDATA[Your test is failed :- login]]>
    </line>
  </reporter-output>
  <suite name="MayurSuite" duration-ms="105918" started-at="2022-03-19T07:42:41Z" finished-at="2022-03-19T07:44:27Z">
    <groups>
    </groups>
    <test name="MayurTest" duration-ms="105918" started-at="2022-03-19T07:42:41Z" finished-at="2022-03-19T07:44:27Z">
      <class name="com.mayur.testcases.LoginTestWithDataProvider">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="beforeMethod" is-config="true" duration-ms="15691" started-at="2022-03-19T07:42:42Z" finished-at="2022-03-19T07:42:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="login(java.lang.String, java.lang.String, int)[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="login" duration-ms="11045" started-at="2022-03-19T07:42:57Z" data-provider="loginData" finished-at="2022-03-19T07:43:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myproject@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myproject@1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.mayur.testcases.LoginTestWithDataProvider.login(LoginTestWithDataProvider.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Your test is started :- login]]>
            </line>
            <line>
              <![CDATA[Your test is failed :- login]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="afterMethod" is-config="true" duration-ms="1732" started-at="2022-03-19T07:43:09Z" finished-at="2022-03-19T07:43:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="beforeMethod" is-config="true" duration-ms="14824" started-at="2022-03-19T07:43:10Z" finished-at="2022-03-19T07:43:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String, int)[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="login" duration-ms="12222" started-at="2022-03-19T07:43:25Z" data-provider="loginData" finished-at="2022-03-19T07:43:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myproject@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myproject@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Your test is started :- login]]>
            </line>
            <line>
              <![CDATA[Your test is success :- login]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="afterMethod" is-config="true" duration-ms="1438" started-at="2022-03-19T07:43:38Z" finished-at="2022-03-19T07:43:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="beforeMethod" is-config="true" duration-ms="15120" started-at="2022-03-19T07:43:39Z" finished-at="2022-03-19T07:43:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="login(java.lang.String, java.lang.String, int)[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="login" duration-ms="9427" started-at="2022-03-19T07:43:54Z" data-provider="loginData" finished-at="2022-03-19T07:44:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myproject@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mypro]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.mayur.testcases.LoginTestWithDataProvider.login(LoginTestWithDataProvider.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Your test is started :- login]]>
            </line>
            <line>
              <![CDATA[Your test is failed :- login]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="afterMethod" is-config="true" duration-ms="1487" started-at="2022-03-19T07:44:04Z" finished-at="2022-03-19T07:44:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="beforeMethod" is-config="true" duration-ms="12205" started-at="2022-03-19T07:44:05Z" finished-at="2022-03-19T07:44:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="login(java.lang.String, java.lang.String, int)[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="login" duration-ms="7708" started-at="2022-03-19T07:44:17Z" data-provider="loginData" finished-at="2022-03-19T07:44:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.mayur.testcases.LoginTestWithDataProvider.login(LoginTestWithDataProvider.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Your test is started :- login]]>
            </line>
            <line>
              <![CDATA[Your test is failed :- login]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.mayur.testcases.LoginTestWithDataProvider@691a7f8f]" name="afterMethod" is-config="true" duration-ms="1546" started-at="2022-03-19T07:44:25Z" finished-at="2022-03-19T07:44:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.mayur.testcases.LoginTestWithDataProvider -->
    </test> <!-- MayurTest -->
  </suite> <!-- MayurSuite -->
</testng-results>
